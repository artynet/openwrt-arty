--- a/deps/v8/src/base/cpu.cc	2016-01-21 02:08:19.000000000 +0100
+++ b/deps/v8/src/base/cpu.cc	2016-01-26 16:01:00.000000000 +0100
@@ -136,25 +136,6 @@
 #endif  // V8_HOST_ARCH_ARM

 #if V8_HOST_ARCH_MIPS
-int __detect_fp64_mode(void) {
-  double result = 0;
-  // Bit representation of (double)1 is 0x3FF0000000000000.
-  __asm__ volatile(
-      ".set push\n\t"
-      ".set noreorder\n\t"
-      ".set oddspreg\n\t"
-      "lui $t0, 0x3FF0\n\t"
-      "ldc1 $f0, %0\n\t"
-      "mtc1 $t0, $f1\n\t"
-      "sdc1 $f0, %0\n\t"
-      ".set pop\n\t"
-      : "+m"(result)
-      :
-      : "t0", "$f0", "$f1", "memory");
-
-  return !(result == 1);
-}
-

 int __detect_mips_arch_revision(void) {
   // TODO(dusmil): Do the specific syscall as soon as it is implemented in mips
@@ -335,8 +316,7 @@
       has_thumb2_(false),
       has_vfp_(false),
       has_vfp3_(false),
-      has_vfp3_d32_(false),
-      is_fp64_mode_(false) {
+      has_vfp3_d32_(false) {
   memcpy(vendor_, "Unknown", 8);
 #if V8_OS_NACL
 // Portable host shouldn't do feature detection.
@@ -586,7 +566,6 @@
   has_fpu_ = HasListItem(cpu_model, "FPU");
   delete[] cpu_model;
 #ifdef V8_HOST_ARCH_MIPS
-  is_fp64_mode_ = __detect_fp64_mode();
   architecture_ = __detect_mips_arch_revision();
 #endif
